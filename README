                                Tracker Project
                               =================

'tracker' is a binary analysis tool that uses dynamic and static approaches to
get an as complete as possible disassembly of a binary with a minimum of false
positive instructions gathered (tracker must provide a proof that every single
trace it displays can be executable for real with an input that trigger its
execution).

It uses a fuzzer to extract a first couple of traces from the given binary and,
then, provides new inputs to the fuzzer with the help of static-analysis
techniques (symbolic execution and abstract interpretation applied on a CFG
extracted from previous traces).


Build the project for users
---------------------------
This project requires meson-build, the capstone library and a Linux platform.
To build it:

#> cd tracker/
#> meson --buildtype=release --prefix=/usr/local _build .
#> cd _build/
#> ninja
#> ninja install


Build the project for developer
-------------------------------
Build the software and run the tests (buildtype: 'debug' or 'debugoptimized'):

#> cd tracker/
# meson --buildtype=debug _build .
#> cd _build/
#> ninja
#> ninja test

Having the tests with code coverage:

#> cd tracker/
# meson --buildtype=debug -Db_coverage=true _build .
#> cd _build/
#> ninja
#> ninja test
#> ninja coverage-html
#> firefox meson-logs/coveragereport/index.html

Formatting the code with clang-format:

#> ninja clang-format

Perform some static-analysis on the code:
#> ninja clang-tidy


Reporting bugs
--------------
Bugs must be reported to Emmanuel Fleury <emmanuel.fleury@u-bordeaux.fr>
